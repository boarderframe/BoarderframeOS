apiVersion: apps/v1
kind: Deployment
metadata:
  name: mcp-manager
  namespace: mcp-server-manager
  labels:
    app: mcp-manager
    component: api
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: mcp-manager
  template:
    metadata:
      labels:
        app: mcp-manager
        component: api
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: mcp-manager
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      containers:
      - name: mcp-manager
        image: ghcr.io/your-org/fastapi-mcp-server-manager:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        env:
        - name: FASTAPI_ENV
          value: "production"
        - name: PORT
          value: "8000"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: mcp-secrets
              key: postgres-url
        - name: POSTGRES_HOST
          value: "postgres"
        - name: POSTGRES_PORT
          value: "5432"
        - name: POSTGRES_DB
          value: "mcpdb"
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: mcp-secrets
              key: postgres-user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mcp-secrets
              key: postgres-password
        - name: PYTHONUNBUFFERED
          value: "1"
        - name: PYTHONDONTWRITEBYTECODE
          value: "1"
        - name: WEBUI_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: mcp-secrets
              key: webui-secret-key
        - name: LOG_LEVEL
          value: "info"
        - name: RATE_LIMIT_ENABLED
          value: "true"
        - name: SECURITY_AUDIT_ENABLED
          value: "true"
        - name: DB_POOL_SIZE
          value: "20"
        - name: DB_MAX_OVERFLOW
          value: "30"
        volumeMounts:
        - name: config
          mountPath: /app/config
          readOnly: true
        - name: logs
          mountPath: /app/logs
        - name: tmp
          mountPath: /tmp
        resources:
          requests:
            cpu: 300m
            memory: 384Mi
          limits:
            cpu: 1200m
            memory: 768Mi
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: config
        configMap:
          name: mcp-config
      - name: logs
        emptyDir: {}
      - name: tmp
        emptyDir: {}
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
      - key: "app"
        operator: "Equal"
        value: "mcp"
        effect: "NoSchedule"
---
apiVersion: v1
kind: Service
metadata:
  name: mcp-manager
  namespace: mcp-server-manager
  labels:
    app: mcp-manager
    component: api
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app: mcp-manager
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mcp-manager
  namespace: mcp-server-manager
  labels:
    app: mcp-manager
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: mcp-server-manager
  name: mcp-manager
rules:
- apiGroups: [""]
  resources: ["configmaps", "secrets"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: mcp-manager
  namespace: mcp-server-manager
subjects:
- kind: ServiceAccount
  name: mcp-manager
  namespace: mcp-server-manager
roleRef:
  kind: Role
  name: mcp-manager
  apiGroup: rbac.authorization.k8s.io