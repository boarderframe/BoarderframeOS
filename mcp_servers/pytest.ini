[tool:pytest]
# Pytest configuration for Playwright MCP Server tests

# Test discovery
testpaths = tests test_playwright_mcp.py
python_files = test_*.py *_test.py
python_classes = Test* *Tests
python_functions = test_*

# Markers
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (with real browser)
    e2e: End-to-end tests (full workflows)
    performance: Performance and load tests
    security: Security-related tests
    slow: Slow-running tests
    playwright: Tests using Playwright
    smoke: Smoke tests for basic functionality
    regression: Regression tests

# Asyncio configuration
asyncio_mode = auto

# Output and reporting
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --showlocals
    --durations=10
    --color=yes
    --disable-warnings
    -ra

# Minimum Python version
minversion = 3.8

# Test session configuration
console_output_style = progress
junit_family = xunit2

# Filtering
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:playwright.*
    ignore::RuntimeWarning:asyncio.*

# Coverage (when using pytest-cov)
# addopts = --cov=playwright_server --cov-report=html --cov-report=term-missing

# Timeout configuration (requires pytest-timeout)
timeout = 300
timeout_method = thread

# Log configuration
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Test environment
env =
    PLAYWRIGHT_BROWSERS_PATH = 0
    PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD = 0